// Learn more: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* ─────────── Patient (bệnh nhân) ─────────── */
model Patient {
  id          Int       @id @default(autoincrement())
  name        String
  phone       String
  diagnosis   String?   // nội dung chuẩn đoán
  createdAt   DateTime  @default(now())
  bookings    Booking[]

  @@index([phone])
}

/* ─────────── Surgeon (bác sĩ / resource) ─────────── */
model Surgeon {
  id            Int       @id @default(autoincrement())
  name          String
  specialization String?  // chuyên khoa
  startedYear   Int?      // năm bắt đầu hành nghề
  bookings      Booking[]
}

/* ─────────── Booking (đặt lịch theo khoảng thời gian) ───────────
   Có unique constraint để chống race condition
------------------------------------------------------------------ */
model Booking {
  id          Int      @id @default(autoincrement())

  surgeonId   Int
  surgeon     Surgeon  @relation(fields: [surgeonId], references: [id])

  patientId   Int
  patient     Patient  @relation(fields: [patientId], references: [id])

  startAt     DateTime // UTC
  endAt       DateTime // UTC; phải > startAt

  // Thông tin người đặt (có thể khác với bệnh nhân)
  bookerName  String?
  bookerPhone String

  status      BookingStatus @default(PENDING)
  createdAt   DateTime      @default(now())

  // Chống double booking: một bác sĩ không thể có 2 booking trùng thời gian
  @@unique([surgeonId, startAt])
  @@index([surgeonId, startAt])
  @@index([surgeonId, endAt])
  @@index([patientId])
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
